<!--
 * Proland: a procedural landscape rendering library.
 * Copyright (c) 2008-2011 INRIA
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<!--
 * Proland is distributed under a dual-license scheme.
 * You can obtain a specific license from Inria: proland-licensing@inria.fr.
-->
<!--
 * Authors: Eric Bruneton, Antoine Begault, Guillaume Piolat.
-->
<?xml version="1.0" ?>
<sequence>
    <setTarget autoResize="true">
        <buffer name="COLOR0" texture="offscreenColor"/>
        <buffer name="DEPTH" texture="offscreenDepth"/>
    </setTarget>
    <setState drawBuffer="COLOR0" clearColor="true" clearDepth="true">
         <polygon front="FILL" back="CULL"/>
         <depth enable="true" value="LESS"/>
    </setState>
    <foreach var="o" flag="dynamic" parallel="true">
        <callMethod name="$o.update"/>
    </foreach>
    <setTransforms module="globalsShaderFS" worldPos="worldCameraPos"/>
    <foreach var="l" flag="light">
        <callMethod name="$l.draw"/>
    </foreach>
    <foreach var="o" flag="object" culling="true">
        <callMethod name="$o.draw"/>
    </foreach>
    <setState>
        <blend enable="true" r="0.0" g="0.0" b="0.0" a="0.0" eq="ADD" alphaeq="ADD" src="SRC_ALPHA" dst="ONE_MINUS_SRC_ALPHA" alphasrc="ZERO" alphadst="ONE"/>
    </setState>
    <foreach var="o" flag="transparent" culling="true">
        <callMethod name="$o.draw"/>
    </foreach>
    <setState>
         <blend/>
    </setState>
    <setTarget/>
    <setProgram>
        <module name="globalsShaderFS"/>
        <module name="this.postprocess"/>
    </setProgram>
    <drawMesh name="quad"/>
    <foreach var="o" flag="overlay">
        <callMethod name="$o.draw"/>
    </foreach>
</sequence>

