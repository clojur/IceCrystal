<!--
 * Proland: a procedural landscape rendering library.
 * Copyright (c) 2008-2011 INRIA
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<!--
 * Proland is distributed under a dual-license scheme.
 * You can obtain a specific license from Inria: proland-licensing@inria.fr.
-->
<!--
 * Authors: Eric Bruneton, Antoine Begault, Guillaume Piolat.
-->
<?xml version="1.0" ?>
<archive>
    <multithreadScheduler name="defaultScheduler" nthreads="3" fps="0"/>

    <sequence name="cameraMethod">
        <setTransforms module="globalsShader" worldPos="worldCameraPos"/>
        <foreach var="o" flag="dynamic" parallel="true">
            <callMethod name="$o.update"/>
        </foreach>
        <foreach var="l" flag="light">
            <callMethod name="$l.draw"/>
        </foreach>
        <foreach var="o" flag="object" culling="true">
            <callMethod name="$o.draw"/>
        </foreach>
        <foreach var="o" flag="overlay">
            <callMethod name="$o.draw"/>
        </foreach>
    </sequence>

    <sequence name="drawOceanFFTMethod">
        <setProgram>
            <module name="globalsShader"/>
            <module name="atmosphereShader"/>
            <module name="this.material"/>
        </setProgram>
        <drawOceanFFT radius="6360005.0" zmin="20000.0" brdfShader="oceanFFTShader"/>
    </sequence>

    <module name="oceanFFTShader" version="330" source="oceanFFTShader.glsl"/>

    <module name="fftInitShader" version="330" source="fftInitShader.glsl"/>

    <module name="fftxShader" version="330" source="fftxShader.glsl"/>

    <module name="fftyShader" version="330" source="fftyShader.glsl"/>

    <module name="variancesShader" version="330" source="variancesShader.glsl"/>

    <sequence name="sunMethod">
        <setTransforms module="globalsShader" worldPos="worldSunDir"/>
    </sequence>

    <sequence name="raycastMethod">
        <setProgram>
            <module name="globalsShader"/>
            <module name="atmosphereShader"/>
            <module name="this.material"/>
        </setProgram>
        <setTransforms cameraToWorld="cameraToWorld" screenToCamera="screenToCamera"/>
        <drawMesh name="this.geometry"/>
    </sequence>

    <module name="globalsShader" version="330" vertex="globalsShader.glsl" fragment="globalsShader.glsl">
        <uniform1f name="hdrExposure" x="0.4"/>
    </module>

    <module name="atmosphereShader" version="330" fragment="atmosphereShader.glsl">
        <uniformSampler name="transmittanceSampler" texture="transmittance"/>
        <uniformSampler name="skyIrradianceSampler" texture="irradiance"/>
        <uniformSampler name="inscatterSampler" texture="inscatter"/>
    </module>

    <module name="skyShader" version="330" source="skyShader.glsl">
        <uniformSampler name="glareSampler" texture="sunglare"/>
        <uniform3f name="origin" x="0.0" y="0.0" z="0.0"/>
    </module>

    <texture2D name="transmittance" source="transmittance.raw" internalformat="RGBA16F" min="LINEAR" mag="LINEAR" wraps="CLAMP_TO_EDGE" wrapt="CLAMP_TO_EDGE"/>

    <texture2D name="irradiance" source="irradiance.raw" internalformat="RGBA16F" min="LINEAR" mag="LINEAR" wraps="CLAMP_TO_EDGE" wrapt="CLAMP_TO_EDGE"/>

    <texture3D name="inscatter" source="inscatter.raw" internalformat="RGBA16F" min="LINEAR" mag="LINEAR" wraps="CLAMP_TO_EDGE" wrapt="CLAMP_TO_EDGE" wrapr="CLAMP_TO_EDGE"/>

    <texture2D name="sunglare" source="sunglare.png" internalformat="RGB8" min="LINEAR_MIPMAP_LINEAR" mag="LINEAR"/>

    <texture2D name="font" source="text.png" internalformat="R8" min="LINEAR_MIPMAP_LINEAR" mag="LINEAR"/>

    <font name="basicFont" tex="font" nRows="8" nCols="12" minChar="32" maxChar="127" invalidChar="63" charWidths="19"/>

    <module name="textShader" version="330" source="textShader.glsl"/>

    <showInfo name="infoMethod" x="4" y="4" maxLines="4" fontSize="24" font="basicFont" fontProgram="textShader;"/>

    <showLog name="logMethod" x="4" y="-4" maxLines="32" fontSize="16" font="basicFont" fontProgram="textShader;"/>

    <drawTweakBar name="drawTweakBarMethod"/>

    <node name="scene">
        <node flags="camera">
            <method id="draw" value="cameraMethod"/>
        </node>

        <node name="sun" flags="light">
            <translate x="0" y="-1" z="0"/>
            <method id="draw" value="sunMethod"/>
        </node>

        <node name="ocean" flags="object">
            <bounds xmin="-6370000" xmax="6370000" ymin="-6370000" ymax="6370000" zmin="-6370000" zmax="6370000"/>
            <method id="draw" value="drawOceanFFTMethod"/>
            <module id="material" value="oceanFFTShader"/>
        </node>

        <node name="sky" flags="object">
            <bounds xmin="-6370000" xmax="6370000" ymin="-6370000" ymax="6370000" zmin="-6370000" zmax="6370000"/>
            <mesh id="geometry" value="square.mesh"/>
            <method id="draw" value="raycastMethod"/>
            <module id="material" value="skyShader"/>
        </node>

        <node flags="overlay">
            <method id="draw" value="drawTweakBarMethod"/>
        </node>
        <node flags="overlay">
            <method id="draw" value="logMethod"/>
        </node>
        <node flags="overlay">
            <method id="draw" value="infoMethod"/>
        </node>
    </node>

    <basicViewHandler name="viewHandler" viewManager="window"/>

    <tweakScene name="editScene" scene="scene" active="false"/>

    <tweakBar name="settings" label="Options">
        <float label="Exposure" keyincr="+" keydecr="-"
            group="Rendering" help="Choose exposure factor for tone mapping"
            min="0.01" max="10.0" step="0.01" path="sky/material/hdrExposure"/>
    </tweakBar>

    <tweakBarManager name="tweakBar" next="viewHandler">
        <editor id="resources" bar="settings" permanent="true" exclusive="false"/>
        <editor id="scene" bar="editScene" exclusive="false"/>
    </tweakBarManager>

    <helloworld name="window" ui="tweakBar" view="viewHandler" radius="6360000"/>

</archive>
